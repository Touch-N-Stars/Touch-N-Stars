{
  "common": {
    "cancel": "Cancel",
    "confirm": "Confirm",
    "close": "Close"
  },
  "general": {
    "cancel": "Cancel",
    "confirm": "Confirm"
  },
  "pages": {
    "equipment": {
      "title": "Equipment Control"
    }
  },
  "app": {
    "title": "Touch'N'Stars",
    "connection_error_toast": {
      "title": "Connection error",
      "message_api": "The API plugin is not available. Please check the settings in NINA",
      "message_api_version": "The API plugin is too old. Please perform an update",
      "message_tns": "The Touch'N'Stars plugin is not available. Please check the settings in NINA",
      "message_tns_version": "The Touch N Stars plugin is too old. Please perform an update"
    }
  },
  "whatsnew": {
    "title": "What's New",
    "loading": "Loading…"
  },
  "setup": {
    "welcome": "Welcome to Touch'N'Stars",
    "description": "Let's get started with a quick setup",
    "selectLanguage": "Select your language",
    "gpsConfiguration": "GPS Configuration",
    "completeSetup": "Complete Setup",
    "instanceConfiguration": "N.I.N.A connection details",
    "InfoAppsTitel": "Wiki",
    "check_wki": "You can find detailed instructions in our wiki"
  },
  "components": {
    "framing": {
      "confirmSetTargetTitle": "Confirm Target Selection",
      "confirmSetTargetMessage": "Are you sure you want to set this target as the sequence target?",
      "useNinaCache": "Use NINA cache for the target image",
      "setSequnceTarget": "set to sequence target",
      "search": {
        "title": "Search",
        "placeholder": "Enter a search term...",
        "objectTypes": {
          "Planet": "Planet",
          "Comet": "Comet",
          "StellariumObject": "Object",
          "Star": "Star",
          "Moon": "Moon"
        }
      },
      "openFraminingModal": "Open in framing-assistant",
      "fovSettings": {
        "rotationAngle": "Camera rotation",
        "fov": "Field of View"
      },
      "getImageRotation": {
        "startCapture": "Determine rotation from camera",
        "SolveRun": "Platesolve",
        "SolveError": "Error solving image"
      },
      "moveRotator": "Rotate camera",
      "infoTargetImage": "If the image is only displayed in black, the “Offline Sky Map Cache“ must be set up in NINA or the “use NINA cache” option must be deactivated",
      "useCenter": "Center",
      "useRotate": "Rotate"
    },
    "tutorial": {
      "previous": "Previous",
      "next": "Next",
      "skip": "Skip Tutorial"
    },
    "settings": {
      "title": "Settings",
      "add": "add",
      "coordinates": "GPS Coordinates",
      "save": "Save",
      "infoSetLocationSync": "Please set location sync to mount first",
      "connection": "Connection Settings",
      "language": "Language",
      "image": {
        "title": "Image Settings",
        "quality": "Image Quality",
        "strech_factor": "Stretch Factor",
        "black_clipping": "Black Clipping",
        "debayern": "Debayer Image",
        "DebayeredHFR": "Debayered HFR",
        "UnlinkedStretch": "Unlinked Strech"
      },
      "debug": {
        "title": "Debug",
        "activate": "Activate Debug Mode",
        "titel": "Debug"
      },
      "notifications": {
        "title": "Notifications",
        "enable": "Enable",
        "sequence": "Sequence",
        "phd2": "PHD2"
      },
      "keepAwake": {
        "title": "Keep Screen Awake",
        "description": "Prevent the device from dimming or locking while the app is open."
      },
      "showTutorial": "Show Tutorial",
      "plugins": {
        "title": "Plugin Management",
        "description": "Manage installed plugins",
        "author": "Author"
      },
      "system": {
        "title": "System Controls",
        "description": "Control system restart and shutdown",
        "info": "These actions will affect the entire system",
        "confirmation": "Confirm Action",
        "confirmShutdown": "Are you sure you want to shutdown the system?",
        "confirmRestart": "Are you sure you want to restart the system?"
      },
      "update": "Update",
      "errors": {
        "instanceNameRequired": "Instance name is required",
        "invalidIPFormat": "Invalid IP format",
        "invalidPortRange": "Invalid port range",
        "invalidInstance": "Invalid instance",
        "emptyFields": "Empty fields"
      }
    },
    "connectEquipment": {
      "camera": {
        "name": "Camera"
      },
      "connectAll": "Connect All",
      "disconnectAll": "Disconnect All",
      "connectAllError": "Error connecting all devices",
      "disconnectAllError": "Error disconnecting all devices",
      "filter": {
        "name": "Filterwheel"
      },
      "mount": {
        "name": "Mount"
      },
      "focuser": {
        "name": "Focuser"
      },
      "rotator": {
        "name": "Rotator"
      },
      "guider": {
        "name": "Guider"
      },
      "safety": {
        "name": "Safety monitor"
      },
      "flat": {
        "name": "Flatdevice"
      },
      "dome": {
        "name": "Dome"
      },
      "switch": {
        "name": "Switch"
      },
      "weather": {
        "name": "Weather"
      },
      "info": {
        "title": "Info",
        "message": "The manual filter wheel and the manual rotator can currently only be controlled via NINA. Use the API's “Networked Filter Wheel” for the filter wheel"
      }
    },
    "lastLogs": {
      "timestamp": "Timestamp",
      "level": "Level",
      "message": "Message",
      "download": "Download"
    },
    "sequence": {
      "stats": "Stats",
      "noSequenceLoaded": "No sequence loaded",
      "noSequenceData": "No data available yet",
      "startSequence": "Start sequence",
      "stopSequence": "Stop sequence",
      "resetSequence": "Reset sequence",
      "resetConfirmationTitle": "Confirm Reset",
      "resetConfirmationMessage": "Are you sure you want to reset the sequence? This action cannot be undone.",
      "load_sequence": "Load sequence from directory",
      "choose_sequence": "Choose a sequence",
      "no_sequences_found": "No sequence found",
      "error_loading_sequences": "Error loading sequences",
      "error_loading_sequence": "Error loading sequence",
      "filter": "Filter",
      "triggers": "Triggers",
      "expandAll": "Expand All",
      "collapseAll": "Collapse All",
      "details": {},
      "hfr": "HFR",
      "mean": "Mean",
      "median": "Median",
      "stDev": "St. Dev.",
      "rmsText": "RMS",
      "monitor": {
        "settings": {
          "title": "View settings",
          "showImage": "Show last image",
          "showImageStats": "Show last image stats",
          "showImgStatsGraph": "Show HFR-Chart",
          "showGuiderAfGraph": "Show autofocus-chart",
          "display_status_under_image": "Show status below image",
          "sequenceCurrentState": "Show Sequence state"
        }
      },
      "running": "RUNNING",
      "imageHistory": "Image History",
      "duration": "Duration",
      "temperatureShort": "Temp",
      "conditions": "Conditions",
      "info": {
        "header": "Info",
        "message": "Unfortunately, your sequence cannot be edited. Not all sequence plugins are currently supported. If you want to help us, let us know on GitHub which plugins you are using."
      },
      "info_general": {},
      "sort": {
        "sort": "Sort",
        "oldest": "oldest first",
        "newest": "newest first"
      },
      "time": "Time",
      "noRunningItems": "Sequence stopped",
      "status": "Sequence status",
      "instructions": "Instructions"
    },
    "mount": {
      "title": "Mount",
      "slew": "Slew",
      "location_sync": {
        "title": "Location sync settings",
        "confirmationMessage": "If 'Location Sync' in NINA is set to 'Prompt', a confirmation window may appear before coordinates are sent to the telescope. To avoid this and allow TNS to automatically set the coordinates, we recommend changing the setting to 'Sync to Telescope'",
        "toTelescope": {
          "label": "Sync to telescope"
        },
        "toApplication": {
          "label": "Sync to application"
        },
        "noSync": {
          "label": "No sync"
        }
      },
      "control": {
        "park": "Park",
        "unpark": "Unpark",
        "home": "Home",
        "set_as_park": "Set as park",
        "trackingMode": "Tracking Mode",
        "manuellControl": "Manual control",
        "slewRate": "Slew rate °/s",
        "siderial": "Sidereal",
        "sync_coordinates_to_mount": "Sync coordinates with mount",
        "errors": {
          "unpark": "Error unparking mount",
          "tracking": "Error setting tracking mode"
        },
        "setLocationSyncToMount": "Set \"Sync to telescope\""
      },
      "info": {
        "notConnected": "Please connect mount",
        "parked": "Parked",
        "unparked": "Unparked",
        "trackingActive": "Tracking is active",
        "trackingDisabled": "Tracking disabled",
        "slewing": "Mount is slewing",
        "notSlewing": "Not slewing",
        "timeToMeridianFlip": "Time to Meridian Flip",
        "declination": "Dec",
        "rightAscension": "Ra"
      }
    },
    "guider": {
      "notConnected": "Please connect guider",
      "start": "Start",
      "startWithCal": "Starting with calibration",
      "stop": "Stop",
      "rms_error": "RMS Error",
      "title": "Guider",
      "running": "RUNNING",
      "statusLabel": "Status",
      "status": {
        "looping": "Looping",
        "lostLock": "Lost Lock",
        "guiding": "Guiding",
        "stopped": "Stopped",
        "calibrating": "Calibrating",
        "unknown": "Unknown"
      },
      "calibrationAssistant": {
        "title": "Calibration Assistant",
        "info": "The Calibration Assistant helps you position the mount optimally for calibration and perform an accurate calibration.",
        "positionSettings": "Position Settings",
        "decOffset": "Dec Offset",
        "meridianOffset": "Meridian Offset",
        "direction": "Direction",
        "west": "West",
        "east": "East",
        "slewToPosition": "Slew to Position",
        "startCalibration": "Start Calibration",
        "stopCalibration": "Stop Calibration",
        "positionCalculated": "Optimal position calculated",
        "slewing": "Slewing to target position...",
        "slewComplete": "Slew completed",
        "slewError": "Error during slew",
        "stopSlew": "Stop Slew",
        "slewStopped": "Slew stopped",
        "calibrating": "Calibration in progress...",
        "calibrationComplete": "Calibration completed",
        "calibrationFailed": "Calibration failed",
        "calibrationStopped": "Calibration stopped",
        "calibrationError": "Error during calibration",
        "calibrationResult": "Calibration Result",
        "quality": "Quality",
        "goodCalibration": "Excellent calibration achieved",
        "poorCalibration": "Calibration could be improved. Try a different position or check your equipment."
      },
      "phd2": {
        "Exposuretime": "Exposuretime",
        "ra": {
          "aggression": "RA: Aggression",
          "hysteresis": "RA: Hysteresis",
          "MinMove": "RA: Min move",
          "MaxMove": "RA: Max move",
          "predictive_weight": "RA: Predictive weight",
          "reactive_weight": "RA: Reactive weight",
          "slope_weight": "RA: Slope weight",
          "exp_factor": "RA: Exposure factor"
        },
        "dec": {
          "aggression": "DEC: Aggression",
          "hysteresis": "DEC: Hysteresis",
          "MinMove": "DEC: Min move",
          "MaxMove": "DEC: Max move",
          "predictive_weight": "DEC: Predictive weight",
          "reactive_weight": "DEC: Reactive weight",
          "slope_weight": "DEC: Slope weight",
          "exp_factor": "DEC: Exposure factor"
        },
        "profile": "Profile",
        "forceCalibration": "Force Calibration",
        "error": {
          "title": "PHD2 Error",
          "star-lost-message": "Star lost"
        }
      }
    },
    "focuser": {
      "title": "Focuser",
      "new_position": "New position:",
      "move": "Move",
      "start_autofocus": "Start autofocus",
      "cancel_autofocus": "Cancel autofocus",
      "autofocus_graph": "Autofocus graph",
      "autofocus_error": "Autofocus error",
      "please_connect_focuser": "Please connect focuser",
      "current_position": "Current position:",
      "temperature": "Temperature:",
      "moving": "Moving",
      "stopped": "Stopped",
      "autofocus_active": "Autofocus active",
      "autofocus": "Autofocus",
      "last_autofocus": "Last autofocus"
    },
    "dome": {
      "title": "Dome",
      "azimuth": "Azimuth",
      "slewing": "Slewing",
      "slewing_stopped": "Slewing stopped",
      "following": "Following",
      "following_stopped": "Following stopped",
      "at_home": "Home",
      "not_at_home": "Not at home",
      "park": "Park",
      "unpark": "Unpark",
      "shutter_close": "Shutter closed",
      "shutter_open": "Shutter open",
      "control": {
        "open": "Open shutter",
        "close": "Close shutter",
        "stop": "Stop shutter movement",
        "errors": {
          "open": "Error open shutter",
          "close": "Error close shutter",
          "stop": "Error stop shutter",
          "park": "Error Park",
          "sync": "Error sync",
          "stop_slew": "Error stop slew",
          "home": "Error home",
          "follow": "Error follow Telescope"
        },
        "slew": "Slew",
        "slew_label": "Slew to degrees",
        "follow": "Dome follow telescope",
        "sync": "Sync with telescope",
        "park": "Park",
        "home": "Home"
      },
      "please_connect_dome": "Please connect the dome",
      "is_sync": "Sync",
      "not_sync": "Not sync"
    },
    "camera": {
      "connect": "Please connect camera",
      "settings": "Settings",
      "capture_running": "Capture running",
      "exposure_time": "Exposure time (s):",
      "gain_iso": "Gain / ISO:",
      "name": "Camera name",
      "gain": "Gain",
      "offset": "Offset",
      "temperature": "Temperature  (°C)",
      "standby": "Standby",
      "cooler_on": "Cooling On",
      "cooler_off": "Cooling Off",
      "dew_heater": "Dewheater",
      "dew_heater_on": "Dewheater On",
      "dew_heater_off": "Dewheater Off",
      "camera_cooling": "Camera cool down",
      "target_temperature": "Target temperature (°C)",
      "warm_up_time": "Warm-up time (min)",
      "cooling_time": "Cooling time (min)",
      "binning_mode": "Binning",
      "readout_mode": "Readout Mode",
      "set_use_platesolve": "Use Platesolve",
      "chip_settings": {
        "title": "Chip settings",
        "pixel_size": "Pixel size (μm)",
        "width": "Width (px)",
        "height": "Height (px)",
        "focal_length": "Focal length (mm)"
      },
      "at_target_temp": "At target temp",
      "temperature_setpoint": "Temp setpoint (°C)",
      "cooler_power": "Cooler power (%)",
      "camera_warming": "Camera warm up"
    },
    "tppa": {
      "title": "Three Point Polar Alignment",
      "camera_mount_required": "Camera must be connected",
      "start_alignment": "Start Alignment",
      "stop_alignment": "Stop Alignment",
      "altitude_error": "Altitude Error:",
      "azimuth_error": "Azimuth Error:",
      "total_error": "Total Error:",
      "error_values_missing": "Missing error values",
      "unknown_response_format": "Unknown response format",
      "east": "East",
      "west": "West",
      "down": "Down",
      "up": "Up",
      "not_available": "Not available",
      "running": "RUNNING",
      "plate_solve_start": "Platesolve start",
      "plate_solve_ok": "Platesolve successful",
      "plate_solve_error": "Platesolve error",
      "slewing_first_position": "Slewing to first position",
      "slewing_next_position": "Slewing to next position",
      "capture_running": "Exposure running",
      "last_messages": "Last messages",
      "settings": {
        "title": "TPPA Settings",
        "StartFromCurrentPosition": "Start from current position?",
        "DirectionEast": "Direction East",
        "camera_settings": "Camera Settings",
        "camera_settings_hint": "Leave empty for NINA defaults",
        "exposure_time": "Exposure Time (s)",
        "gain": "Gain",
        "nina_default": "NINA Default",
        "ManualMode": "Manual mode"
      },
      "error_modal": {},
      "tppa": "TPPA"
    },
    "slewAndCenter": {
      "title": "Slew and Center",
      "LastSelectedImageSource_wrong": "Please select offline sky map as image source in NINA / Framing",
      "ra": "RA:",
      "dec": "Dec:",
      "ra_placeholder": "RA 03:47:28.2",
      "dec_placeholder": "Dec +24:06:19",
      "slew": "Slew",
      "slew_and_center": "Slew and Center",
      "errors": {
        "invalidRAInput": "Invalid RA input.",
        "invalidDECInput": "Invalid DEC input.",
        "apiResponseError": "Error in API response:",
        "mountInfoError": "Error fetching mount information:",
        "invalidAltInput": "Invalid alt input.",
        "invalidAzInput": "Invalid az input."
      },
      "visibleStars": "Visible Star Search",
      "alt": "Alt:",
      "az": "Az:",
      "slew_modal": {
        "is_slewing": "Slewing to target",
        "is_centering": "Center target",
        "is_platesolving": "Platesolve running",
        "plate_solve_error": "Platesolve error",
        "center_error": "Centering error",
        "center_successful": "Centering successful",
        "center_Repeat": "Repeat centering",
        "exposure_running": "Exposure running",
        "deviation_target": "Deviation to the target:"
      }
    },
    "filterwheel": {
      "title": "Filter Wheel",
      "filter": "Filter:",
      "unknown": "Unknown",
      "nofilteravailable": "No filter available",
      "please_connect_filterwheel": "Please connect filter wheel",
      "currentFilter": "Current Filter",
      "position": "Position",
      "availableFilters": "Available Filters",
      "manual_filter": {
        "title": "Filterwheel",
        "name": "Change to filter:"
      }
    },
    "rotator": {
      "title": "Rotator",
      "label": "Rotator",
      "move": "Move",
      "control": "Control",
      "notConnected": "Please connect rotator",
      "please_connect_rotator": "Please connect rotator",
      "connected": "Connected",
      "disconnected": "Disconnected",
      "currentPosition": "Current Position",
      "moving": "Moving",
      "stationary": "Stationary",
      "stepSize": "Step Size"
    },
    "flat": {
      "please_connect_flatDevice": "Please connect the flat device",
      "device_name": "Name:",
      "cover_state": "Cover State:",
      "light_state": "Light State:",
      "brightness": "Brightness:",
      "toggle_light": "Light:",
      "cover": {
        "close": "close cover",
        "open": "open cover"
      },
      "title": "Flatpanel"
    },
    "flatassistant": {
      "title": "Flat assistant",
      "count": "Count",
      "exposure_time": "Exposure time",
      "min_exposure_time": "Min exposure time",
      "max_exposure_time": "Max exposure time",
      "brightness": "Brightness",
      "min_brightness": "Min brightness",
      "max_brightness": "Max brightness",
      "histogram_mean_target": "Histogram mean target",
      "mean_tolerance": "Mean tolerance",
      "completed_recordings": "Completed recordings:",
      "start_auto_exposure": "Start auto exposure",
      "start_auto_brightness": "Start autobrightness",
      "start_sky_flat": "Start sky flat",
      "stop": "Stop",
      "auto_exposure": "Auto exposure",
      "auto_brightness": "Auto brightness",
      "skyflat": "Skyflat",
      "button_slew_to_zenith": "Slew to zenith"
    },
    "weatherModal": {
      "weatherInformation": "Weather Information",
      "metric": "Metric",
      "imperial": "Imperial",
      "temperature": "Temperature",
      "cloudCover": "Cloud Cover",
      "wind": "Wind",
      "humidity": "Humidity",
      "pressure": "Pressure",
      "skyTemperature": "Sky temperature",
      "skyQuality": "Sky quality",
      "rainRate": "Rain rate",
      "dewPoint": "Dewpoint"
    },
    "switch": {
      "gauges": "Gauges",
      "switch": "Switch"
    },
    "stellarium": {
      "selected_object": {
        "title": "Selected object",
        "ra": "RA",
        "dec": "DEC",
        "button_framing": "go to framing"
      },
      "datetime": {
        "title": "Date & Time",
        "date": "Date",
        "time": "Time",
        "now": "Now",
        "speed": "Speed"
      },
      "mount_position": {},
      "settings": {
        "constellations_lines_visible": "Show Constellations",
        "azimuthal_lines_visible": "Show azimuthal lines",
        "equatorial_lines_visible": "Show equatorial lines",
        "meridian_lines_visible": "Show meridian",
        "ecliptic_lines_visible": "Show ecliptic",
        "atmosphere_visible": "Show atmosphere",
        "landscapes_visible": "Show landscapes",
        "dsos_visible": "Deep Sky Objects (Messier, NGC)"
      }
    },
    "profile": {
      "label": "Profile:"
    },
    "notifications": {
      "modal": {
        "title": "Configure Notifications",
        "description": "Please grant permission to receive notifications about sequence events."
      }
    },
    "fav_target": {
      "table": {
        "name": "Name",
        "ra": "RA",
        "dec": "DEC",
        "load": "Load",
        "remove": "Remove",
        "rotation": "Rotation"
      },
      "modal_sequence": {
        "titel": "Sequence"
      },
      "modal_sequence_ok": {
        "message": "Target set"
      },
      "modal_sequence_error": {
        "message": "No sequence loaded"
      },
      "enter_name": "Enter name",
      "no_fav": "No favorites saved",
      "titel": "Favourites"
    },
    "helpers": {
      "imageModal": {
        "no_image": "No image data available"
      }
    }
  },
  "plugins": {
    "common": {
      "initializing": "Initializing...",
      "outdated": {
        "title": "Plugin Outdated",
        "message": "The TouchNStars Plugin in NINA is outdated and needs to be updated.",
        "required": "Required Version",
        "current": "Current Version"
      }
    },
    "logfileCollector": {
      "title": "Logfile Collector",
      "intro": "Collect latest TNS logs (including debug) and upload them to the configured endpoint.",
      "descriptionLabel": "Description (optional)",
      "descriptionPlaceholder": "Describe the problem to investigate...",
      "lastToken": "Generated Token",
      "submissionHistory": "Submission History",
      "confirmClearAll": "Are you sure you want to clear all submission history?",
      "actions": {
        "collectUpload": "Collect & Upload",
        "uploading": "Uploading…",
        "copyToken": "Copy",
        "remove": "Remove",
        "clearAll": "Clear All"
      },
      "submissionFields": {
        "date": "Date",
        "filename": "Filename",
        "token": "Token"
      },
      "result": {
        "success": "Upload successful",
        "failed": "Upload failed",
        "failedWithStatus": "Upload failed ({status})",
        "tokenCopied": "Token copied to clipboard",
        "tokenCopyFailed": "Failed to copy token",
        "submissionRemoved": "Submission removed",
        "allSubmissionsCleared": "All submissions cleared"
      }
    },
    "telescopius": {
      "title": "Telescopius",
      "offlineInfo": "Loads personal target lists from telescopius.com and stores them locally for offline availability.",
      "landing": {
        "title": "Telescopius Plugin",
        "subtitle": "Bring your target objects from Telescopius.com directly into Touch'N'Stars",
        "whatIsPlugin": {
          "title": "What is this plugin?",
          "description": "Load your saved target objects from Telescopius.com directly into Touch'N'Stars and use them for navigation and framing.",
          "features": {
            "loadLists": "Load target lists from Telescopius.com",
            "navigate": "Navigate directly to objects",
            "framingAssistant": "Use framing assistant",
            "offlineCache": "Offline cache for fast access"
          }
        },
        "whatIsTelecopius": {
          "title": "What is Telescopius?",
          "description": "Telescopius is a comprehensive astronomy platform for discovering and planning astronomical observations.",
          "features": {
            "database": "Extensive object database",
            "lists": "Personalized target lists",
            "planning": "Observation planning",
            "community": "Community and sharing"
          },
          "visitWebsite": "Visit Telescopius.com"
        },
        "mainFeatures": {
          "title": "Main Features",
          "description": "Seamless integration between Telescopius and Touch'N'Stars:",
          "features": {
            "autoImport": "Automatic Import: All target lists at once",
            "smartCache": "Smart Cache: Fast offline access",
            "directNavigation": "Direct Navigation: Slew with one click",
            "framingIntegration": "Framing Integration: Uses existing tools",
            "locationBased": "Location-based: Considers your location"
          }
        },
        "apiSetup": {
          "title": "Set up API Key",
          "description": "Follow these simple steps to configure the plugin:",
          "step1": {
            "title": "Create Telescopius Account",
            "description": "If you don't have an account yet, register for free:",
            "button": "Register for free"
          },
          "step2": {
            "title": "Request API Key",
            "description": "Sign in and go to Settings → API for your personal key:",
            "button": "Request API key"
          },
          "step3": {
            "title": "Configure API Key",
            "description": "When creating the API key, use these settings:",
            "config": {
              "name": "Name",
              "nameValue": "Any name (e.g. Touch N Stars)",
              "description": "Description",
              "descriptionValue": "Any description (e.g. API for TNS)",
              "accessType": "Access Type",
              "accessTypeValue": "Select Server",
              "ipLimit": "Limit access to these IP addresses",
              "ipLimitValue": "Leave empty"
            }
          },
          "step4": {
            "title": "Enter API Key",
            "description": "Click \"Configure API Key\" below and enter your key:",
            "button": "Configure API Key"
          },
          "security": {
            "title": "Security",
            "description": "Your API key is stored only locally on your device and never shared with others. You can delete it at any time."
          }
        }
      },
      "apiKey": {
        "title": "Telescopius API Key",
        "description": "To use Telescopius, you need an API key. You can get one on the Telescopius website:",
        "linkText": "→ Request Telescopius API Key",
        "securityNote": "The API key is stored on the server and used only for Telescopius requests.",
        "placeholder": "Enter your Telescopius API key...",
        "configured": "API key is already configured",
        "save": "Save",
        "delete": "Delete",
        "cancel": "Cancel",
        "configure": "Configure API Key",
        "required": "API key required",
        "errors": {
          "saveFailed": "API key could not be saved.",
          "deleteFailed": "API key could not be deleted."
        },
        "loadFromTelescopius": "refresh"
      },
      "targetLists": {
        "noListsTitle": "No Target Lists Saved",
        "noListsDescription": "No target lists have been found in your Telescopius account yet.",
        "noListsHint": "Create target lists on telescopius.com and then reload them here.",
        "editOnTelescopius": "Edit lists on Telescopius",
        "dataFrom": "Data from",
        "connectionError": "Connection to Telescopius failed. The NINA PC needs an internet connection and at least one target list must exist in Telescopius."
      }
    },
    "webcam": {
      "title": "Webcam Settings",
      "snapshotUrl": "Snapshot URL",
      "snapshotUrlDescription": "A snapshot URL is a direct link to a single image from your webcam/IP camera. This URL should return a JPEG/PNG image directly, not an HTML page or stream.",
      "snapshotUrlExamples": "Examples:",
      "refreshInterval": "Refresh Interval",
      "displayOptions": "Display Options",
      "autoRefresh": "Auto Refresh",
      "status": "Status",
      "connected": "Connected",
      "disconnected": "Disconnected",
      "error": "Error",
      "lastUpdate": "Last Update",
      "startAuto": "Start Auto",
      "stopAuto": "Stop Auto",
      "settings": "Settings",
      "reset": "Reset",
      "close": "Close",
      "resetConfirm": "Are you sure you want to reset all webcam settings?",
      "liveView": "Live View",
      "noImageAvailable": "No image available",
      "configureUrl": "Configure snapshot URL and fetch image",
      "loadingImage": "Loading image...",
      "errors": {}
    },
    "sequenceCreator": {
      "title": "N.I.N.A Sequence Creator",
      "subtitle": "Create professional astrophotography sequences",
      "toolbar": {
        "undo": "Undo",
        "redo": "Redo",
        "loadBasicSequence": "Load Basic Sequence",
        "clearSequence": "Clear Sequence",
        "saveAsDefault": "Save as Default",
        "saveAsDefaultSuccess": "Saved as default sequence!",
        "sendToNina": "Adopt Sequence",
        "sending": "Sending...",
        "sent": "Sent!",
        "sendErrorTitle": "Error sending to N.I.N.A",
        "sendSuccessMessage": "Sequence successfully sent to N.I.N.A!",
        "validSequence": "Sequence is valid and can be adopted",
        "invalidSequence": "Add Target Settings and Smart Exposure to create a valid sequence"
      },
      "confirmations": {
        "title": "Confirmation",
        "clearSequence": "Are you sure you want to clear the entire sequence? This action cannot be undone.",
        "saveAsDefault": "Are you sure you want to save the current sequence as default? This will overwrite the previous default sequence.",
        "loadBasicSequence": "Are you sure you want to load the basic sequence? This will overwrite the current sequence.",
        "removeAction": "Remove \"{actionName}\" action?",
        "navigateToSequence": "Do you want to switch to the Sequence page now?"
      },
      "containers": {
        "startSequence": {
          "title": "Start Sequence",
          "description": "Actions executed at the beginning of the session",
          "emptyTitle": "No Start Actions",
          "emptyDescription": "Add actions to prepare your equipment for imaging"
        },
        "targetSequence": {
          "title": "Target Sequence",
          "description": "Main imaging sequence for your target",
          "emptyTitle": "No Target Actions",
          "emptyDescription": "Add imaging actions for your target"
        },
        "endSequence": {
          "title": "End Sequence",
          "description": "Actions executed at the end of the session",
          "emptyTitle": "No End Actions",
          "emptyDescription": "Add actions to safely shut down your equipment"
        },
        "noActions": "No Actions",
        "addActionsToContainer": "Add actions to this container",
        "addAction": "Add Action"
      },
      "actions": {
        "disabled": "Disabled",
        "enabled": "Enabled",
        "closeEditor": "Close Editor",
        "editParameters": "Edit Parameters",
        "moveUp": "Move Up",
        "moveDown": "Move Down",
        "duplicateAction": "Duplicate Action",
        "removeAction": "Remove Action",
        "clickToRename": "Click to rename",
        "actionParameters": "Action Parameters",
        "changesSaveAutomatically": "Changes save automatically",
        "min": "Min:",
        "max": "Max:",
        "yes": "Yes",
        "no": "No",
        "notSet": "Not set",
        "noConfigurableParameters": "This action has no configurable parameters.",
        "actionId": "Action ID",
        "category": "Category",
        "parameters": "Parameters",
        "unparkTelescope": {
          "name": "Unpark Telescope",
          "description": "Unpark the telescope mount"
        },
        "coolCamera": {
          "name": "Cool Camera",
          "description": "Cool the camera to specified temperature",
          "temperatureLabel": "Temperature (°C)",
          "temperatureTooltip": "Target temperature for camera cooling",
          "durationLabel": "Cooling Duration (minutes)",
          "durationTooltip": "Time to actively cool the camera (0 = cool until temperature reached)"
        },
        "targetSettings": {
          "name": "Target Settings",
          "description": "Define target coordinates and settings",
          "targetNameLabel": "Target Name",
          "targetNameTooltip": "Name of the celestial object",
          "raLabel": "Right Ascension",
          "raTooltip": "RA in HH:MM:SS format",
          "decLabel": "Declination",
          "decTooltip": "Dec in DD:MM:SS format",
          "positionAngleLabel": "Position Angle (°)",
          "positionAngleTooltip": "Camera rotation angle"
        },
        "slewToTarget": {
          "name": "Slew to Target",
          "description": "Navigate to target with different options",
          "slewModeLabel": "Slew Mode",
          "slewModeTooltip": "Choose how to navigate to the target"
        },
        "runAutofocus": {
          "name": "Run Autofocus",
          "description": "Perform automatic focusing routine"
        },
        "startGuiding": {
          "name": "Start Guiding",
          "description": "Start autoguiding system",
          "forceCalibrationLabel": "Force Calibration",
          "forceCalibrationTooltip": "Force new guider calibration"
        },
        "smartExposure": {
          "name": "Smart Exposure (Imaging)",
          "description": "Intelligent exposure sequence with dithering and triggers",
          "exposureTimeLabel": "Exposure Time (s)",
          "exposureTimeTooltip": "Duration of each exposure",
          "gainLabel": "Gain",
          "gainTooltip": "Camera gain setting",
          "offsetLabel": "Offset",
          "offsetTooltip": "Camera offset setting",
          "binningLabel": "Binning",
          "binningTooltip": "Pixel binning mode",
          "filterLabel": "Filter",
          "filterTooltip": "Filter wheel selection",
          "imageTypeLabel": "Image Type",
          "imageTypeTooltip": "Type of exposure to capture",
          "countLabel": "Image Count",
          "countTooltip": "Number of exposures to take",
          "ditherAfterLabel": "Dither After N Exposures",
          "ditherAfterTooltip": "Dither frequency"
        },
        "stopGuiding": {
          "name": "Stop Guiding",
          "description": "Stop autoguiding system"
        },
        "warmCamera": {
          "name": "Warm Camera",
          "description": "Warm up the camera",
          "durationLabel": "Warming Duration (minutes)",
          "durationTooltip": "Time to actively warm up the camera (0 = warm to ambient temperature)"
        },
        "findHome": {
          "name": "Find Home",
          "description": "Move telescope to home position"
        },
        "parkTelescope": {
          "name": "Park Telescope",
          "description": "Park the telescope mount"
        }
      },
      "actionLibrary": {
        "title": "Action Library",
        "description": "Click to add actions to containers",
        "startActions": "🚀 Start Actions",
        "targetActions": "🎯 Target Actions",
        "endActions": "🏁 End Actions"
      },
      "exportModal": {
        "buttons": {},
        "messages": {},
        "jsonPreview": {
          "sequenceJsonExport": "Sequence JSON Export",
          "previewDescription": "Preview and download your sequence as a JSON file",
          "totalActions": "Total Actions",
          "enabled": "Enabled",
          "categories": "Categories",
          "estimatedDuration": "Est. Duration",
          "filenamePrompt": "Enter filename...",
          "copyJson": "Copy JSON",
          "copied": "Copied!",
          "downloadJson": "Download JSON"
        },
        "howToUse": {}
      },
      "targetSearch": {
        "searchLabel": "Search Target",
        "searchDescription": "Search for deep-sky objects, planets or stars and automatically adopt the coordinates",
        "placeholder": "Enter object name (e.g. M31, NGC 1234, Mars)...",
        "objectTypes": {
          "DSO": "Deep-Sky Object",
          "Planet": "Planet",
          "Star": "Star",
          "Moon": "Moon",
          "Comet": "Comet"
        }
      },
      "settings": {
        "title": "Meridianflip",
        "enableMeridianFlip": "Enable Meridianflip"
      }
    },
    "livestack": {
      "not_available": "Livestack was not found. Please install the Livestack plugin in NINA first.",
      "beta_note": "This plugin is still under development and may contain some errors!",
      "status": "Status",
      "target": "Target",
      "last_updated": "Last updated",
      "available_filters": "Available Filters",
      "no_image_available": "No image available",
      "start_and_select_filter": "Start livestack and select a filter to see images",
      "images_available": "{count} Images Available",
      "no_images_available": "No Images Available"
    }
  }
}
